
#include <iostream>
#include <locale>


/*задание первое (вывод ниже по коду)*/
short int a = 1;
int b = 2;
long int c = 3;
long long d = 4;
char e = 'A';
bool f = true;
float g = 3.14;
double h = 2.7182818284;

/*задание второе и третее (его вывод так же ниже, но происходит до переменных) массив так же ниже*/

enum TToe { X = 8, O, _ };
TToe fp = X;                                    // вот тут Visual Studio дает предупреждение (Тип перечисления "TToe" не входит в область. Старайтесь использовать "enum class" вместо "enum")
TToe fs = O;
TToe sp = _;

/*четвертое задание (в нем я совсем не уверен потому как кодом не смог пока его пощупать)*/

struct GameLevel
{
    char mas[3][3];                             // массив поля для игры
    int Score;                                  // счетчики очков первого и второго игроков
    char Name;                                  // имена игроков
};


/*============================================*/

struct MyVariant
{

};

int main()
{

    setlocale(LC_ALL, "Ru");

    std::cout << fp << fs << sp  << std::endl << std::endl; 
                                                // вывод на экран переменных типа перечисления

/*============================================*/
    
    TToe mas[3] = { X, O, _};                   //массив хранящий значения перечисления TToe
    for (int i = 0; i < 3; i++)                 //цикл вывода массива в терминал
    {
        std::cout << mas[i] << std::endl;       //вывод значений массива в терминал
    }
    
/*============================================*/
    /*int i = 0;                                // эксперимент по вводу имени игрока 
    char Name[10];                          
    do {
        std::cin >> Name[i];
        i++;
    } while (i < 10);

    for (i=0; i < 10; i++) {
        std::cout << Name[i];
    }
    std::cout << std::endl;*/

    /*=======================================*/

    /*=======================================*/

    std::cout << "Переменная типа short int:\t " << a << "\t\tзанимает байт:\t" << sizeof(a) << "\tадрес в памяти переменной:\t" << &a << std::endl;
    std::cout << "Переменная типа int:\t\t " << b << "\t\tзанимает байт:\t" << sizeof(b) << "\tадрес в памяти переменной:\t" << &b << std::endl;
    std::cout << "Переменная типа long int:\t " << c << "\t\tзанимает байт:\t" << sizeof(c) << "\tадрес в памяти переменной:\t" << &c << std::endl;
    std::cout << "Переменная типа long long:\t " << d << "\t\tзанимает байт:\t" << sizeof(d) << "\tадрес в памяти переменной:\t" << &d << std::endl;
    std::cout << "Переменная типа char:\t\t " << e << "\t\tзанимает байт:\t" << sizeof(e) << "\tадрес в памяти переменной:\t" << &e << std::endl;
                                                // вот, кстати, адрес символа вылетает какой то странный. при первом запуске в адресе вылетело (AMMMMMMMMMMM) второй раз вылетело (A и пара смайлов)
    std::cout << "Переменная типа bool:\t\t " << f << "\t\tзанимает байт:\t" << sizeof(f) << "\tадрес в памяти переменной:\t" << &f << std::endl;
    std::cout << "Переменная типа float:\t\t " << g << "\t\tзанимает байт:\t" << sizeof(g) << "\tадрес в памяти переменной:\t" << &g << std::endl;
    std::cout << "Переменная типа double:\t\t " << h << "\tзанимает байт:\t" << sizeof(h) << "\tадрес в памяти переменной:\t" << &h << std::endl;

    /*========================================*/
    /* Непонятный адрес выводит команда &e относительно типа данных char. вопрос: что это может быть?*/


   return 0;
}

